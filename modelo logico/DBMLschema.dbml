// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs
// Build: https://dbdiagram.io/d
// Logical Project: https://docs.google.com/document/d/1jtKEYDBEj7LErkfpHmhh2-ZMlEA0MVmVIGZ0Mc41hqg/edit?usp=sharing


Table Comment {
  comment_ID integer [primary key]
  comment_ID_pai integer
}

Table Blog_Entry {
  entry_ID integer [primary key]
  user_id integer [not null]
  title varchar
}
  Ref: "User"."id" < "Blog_Entry"."user_id"

Table User {
  id varchar [primary key]
  user_name varchar
  email varchar
  rating integer
  password varchar
  user_city varchar
  user_country varchar
  user_state varchar
  registration_date timestamp [default: `now()`]
}

Table Friendship {
  id_1 varchar [primary key]
  id_2 varchar [primary key] 
}
  Ref: "User"."id" < "Friendship"."id_1"
  Ref: "User"."id" < "Friendship"."id_2"

Table BlogEntry_Comment_User_Creates {
  blog_Entry_ID integer [primary key]
  comment_ID integer [primary key]
  user_id varchar [primary key]
  date timestamp [primary key, default: `now()`] 
}
  Ref: "Blog_Entry"."entry_ID" < "BlogEntry_Comment_User_Creates"."blog_Entry_ID"
  Ref: "Comment"."comment_ID" < "BlogEntry_Comment_User_Creates"."comment_ID"
  Ref: "User"."id" < "BlogEntry_Comment_User_Creates"."user_id"

Table Group {
  group_ID integer [primary key]
  group_name varchar
  user_id_creator varchar [not null]
  is_private boolean [default: True]
  qnt_members integer [note: 'Derived']
  type varchar
}
  Ref: "User"."id" < "Group"."user_id_creator"

Table User_Participa_Group {
  group_ID integer [primary key]
  user_id varchar [primary key]
}
  Ref: "Group"."group_ID" < "User_Participa_Group"."group_ID"
  Ref: "User"."id" < "User_Participa_Group"."user_id"

Table Contest {
  contest_ID integer [primary key]
  group_ID integer
  is_private boolean [default: True]
  start_time timestamp [default: `now()`]
  frozen bool
  duration time
  name varchar
  user_id_creator varchar

}
  Ref: "User"."id" < "Contest"."user_id_creator"
  Ref: "Group"."group_ID" < "Contest"."group_ID"

Table Gym {
  gym_ID integer [primary key]
  institution varchar
  original_event_name varchar 
}
  Ref: "Contest"."contest_ID" < "Gym"."gym_ID"

Table User_Participa_Contest {
  user_id varchar [primary key]
  contest_ID integer [primary key]
  ranking integer [note: 'Derived']
}
  Ref: "User"."id" < "User_Participa_Contest"."user_id"
  Ref: "Contest"."contest_ID" < "User_Participa_Contest"."contest_ID"

Table Submission {
  submission_ID integer [primary key]
  user_id_submission varchar [not null]
  submission_time timestamp [default: 'now']
  language varchar
  time_consumed time
  points integer
}
  Ref: "User"."id" < "Submission"."user_id_submission"

Table Problem {
  problem_ID integer [primary key]
  problem_statement varchar
  difficulty varchar
  index integer
  points integer
  solved_count integer [note: 'Derived']
}

Table Solution {
  problem_ID integer [primary key]
}
  Ref: "Problem"."problem_ID" < "Solution"."problem_ID"

Table Problem_Supported_languages {
  problem_ID integer [primary key]
  language varchar
}
  Ref: "Problem"."problem_ID" < "Problem_Supported_languages"."problem_ID"

Table Verdict {
  verdict_ID integer [primary key]
}

Table Submission_Tem_Problem {
  submission_ID integer [primary key]
  problem_ID integer [not null]
  verdict_ID integer
  status varchar
}
  Ref: "Submission"."submission_ID" < "Submission_Tem_Problem"."submission_ID"
  Ref: "Problem"."problem_ID" < "Submission_Tem_Problem"."problem_ID"
  Ref: "Verdict"."verdict_ID" < "Submission_Tem_Problem"."verdict_ID"

Table Contest_Tem {
  contest_ID integer [primary key]
  submission_tem_problem_ID integer [primary key]
}
  Ref: "Contest"."contest_ID" < "Contest_Tem"."contest_ID"
  Ref: "Submission_Tem_Problem"."submission_ID" < "Contest_Tem"."submission_tem_problem_ID"

Table TestCase {
  problem_ID integer [primary key]
  testcase_disc varchar [primary key]
  input varchar
  output varchar
}
  Ref: "Problem"."problem_ID" < "TestCase"."problem_ID"
